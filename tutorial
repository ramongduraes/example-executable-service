snet service metadata-init service/service_spec example-executable-service 0xD416d832F6AE2Ca7d9C7C05f9255Ab49b70c0fe4 --service-type process
snet service metadata-set-fixed-price 0
snet service metadata-add-endpoints http://54.203.198.53:7018
snet service publish snet example-executable-service

# Create snetd.config.json file on the root directory of the service:
# PASSTHROUGH_ENDPOINT is not necessary anymore
# EXECUTABLE_PATH required
{
   "PRIVATE_KEY": "1000000000000000000000000000000000000000000000000000000000000000",
   "DAEMON_LISTENING_PORT": 7018,
   "DAEMON_END_POINT": "http://54.203.198.53:7018",
   "ETHEREUM_JSON_RPC_ENDPOINT": "https://kovan.infura.io",
   "IPFS_END_POINT": "http://ipfs.singularitynet.io:80",
   "REGISTRY_ADDRESS_KEY": "0x2e4b2f2b72402b9b2d6a7851e37c856c329afe38",
   "PASSTHROUGH_ENABLED": true,
   "EXECUTABLE_PATH": "./basic_service_process.py",
   "ORGANIZATION_NAME": "snet",
   "SERVICE_NAME": "basic-service",
   "LOG": {
       "LEVEL": "debug",
       "OUTPUT": {
              "TYPE": "stdout"
           }
   }
}

python3 basic_service_one.py '{"a":12.0, "b":77.0}'

# add the shebang to the beginning of your executable and change its permissions.
# make sure not to print anything else to stdout because it'll be read by the daemon


# you only open snet daemon. The daemon listens to client calls through the blockchain and calls the service as a process when necessary.